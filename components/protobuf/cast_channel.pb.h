/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_EXTENSIONS_API_CAST_CHANNEL_PROTO_CAST_CHANNEL_PB_H_INCLUDED
#define PB_EXTENSIONS_API_CAST_CHANNEL_PROTO_CAST_CHANNEL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _extensions_api_cast_channel_SignatureAlgorithm {
    extensions_api_cast_channel_SignatureAlgorithm_UNSPECIFIED = 0,
    extensions_api_cast_channel_SignatureAlgorithm_RSASSA_PKCS1v15 = 1,
    extensions_api_cast_channel_SignatureAlgorithm_RSASSA_PSS = 2
} extensions_api_cast_channel_SignatureAlgorithm;

typedef enum _extensions_api_cast_channel_HashAlgorithm {
    extensions_api_cast_channel_HashAlgorithm_SHA1 = 0,
    extensions_api_cast_channel_HashAlgorithm_SHA256 = 1
} extensions_api_cast_channel_HashAlgorithm;

/* Always pass a version of the protocol for future compatibility
 requirements. */
typedef enum _extensions_api_cast_channel_CastMessage_ProtocolVersion {
    extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0 = 0
} extensions_api_cast_channel_CastMessage_ProtocolVersion;

/* What type of data do we have in this message. */
typedef enum _extensions_api_cast_channel_CastMessage_PayloadType {
    extensions_api_cast_channel_CastMessage_PayloadType_STRING = 0,
    extensions_api_cast_channel_CastMessage_PayloadType_BINARY = 1
} extensions_api_cast_channel_CastMessage_PayloadType;

typedef enum _extensions_api_cast_channel_AuthError_ErrorType {
    extensions_api_cast_channel_AuthError_ErrorType_INTERNAL_ERROR = 0,
    extensions_api_cast_channel_AuthError_ErrorType_NO_TLS = 1, /* The underlying connection is not TLS */
    extensions_api_cast_channel_AuthError_ErrorType_SIGNATURE_ALGORITHM_UNAVAILABLE = 2
} extensions_api_cast_channel_AuthError_ErrorType;

/* Struct definitions */
typedef struct _extensions_api_cast_channel_CastMessage {
    extensions_api_cast_channel_CastMessage_ProtocolVersion protocol_version;
    /* source and destination ids identify the origin and destination of the
 message.  They are used to route messages between endpoints that share a
 device-to-device channel.

 For messages between applications:
   - The sender application id is a unique identifier generated on behalf of
     the sender application.
   - The receiver id is always the the session id for the application.

 For messages to or from the sender or receiver platform, the special ids
 'sender-0' and 'receiver-0' can be used.

 For messages intended for all endpoints using a given channel, the
 wildcard destination_id '*' can be used. */
    pb_callback_t source_id;
    pb_callback_t destination_id;
    /* This is the core multiplexing key.  All messages are sent on a namespace
 and endpoints sharing a channel listen on one or more namespaces.  The
 namespace defines the protocol and semantics of the message. */
    pb_callback_t namespace;
    extensions_api_cast_channel_CastMessage_PayloadType payload_type;
    /* Depending on payload_type, exactly one of the following optional fields
 will always be set. */
    pb_callback_t payload_utf8;
    pb_callback_t payload_binary;
} extensions_api_cast_channel_CastMessage;

/* Messages for authentication protocol between a sender and a receiver. */
typedef struct _extensions_api_cast_channel_AuthChallenge {
    bool has_signature_algorithm;
    extensions_api_cast_channel_SignatureAlgorithm signature_algorithm;
    pb_callback_t sender_nonce;
    bool has_hash_algorithm;
    extensions_api_cast_channel_HashAlgorithm hash_algorithm;
} extensions_api_cast_channel_AuthChallenge;

typedef struct _extensions_api_cast_channel_AuthResponse {
    pb_callback_t signature;
    pb_callback_t client_auth_certificate;
    pb_callback_t intermediate_certificate;
    bool has_signature_algorithm;
    extensions_api_cast_channel_SignatureAlgorithm signature_algorithm;
    pb_callback_t sender_nonce;
    bool has_hash_algorithm;
    extensions_api_cast_channel_HashAlgorithm hash_algorithm;
    pb_callback_t crl;
} extensions_api_cast_channel_AuthResponse;

typedef struct _extensions_api_cast_channel_AuthError {
    extensions_api_cast_channel_AuthError_ErrorType error_type;
} extensions_api_cast_channel_AuthError;

typedef struct _extensions_api_cast_channel_DeviceAuthMessage {
    /* Request fields */
    bool has_challenge;
    extensions_api_cast_channel_AuthChallenge challenge;
    /* Response fields */
    bool has_response;
    extensions_api_cast_channel_AuthResponse response;
    bool has_error;
    extensions_api_cast_channel_AuthError error;
} extensions_api_cast_channel_DeviceAuthMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _extensions_api_cast_channel_SignatureAlgorithm_MIN extensions_api_cast_channel_SignatureAlgorithm_UNSPECIFIED
#define _extensions_api_cast_channel_SignatureAlgorithm_MAX extensions_api_cast_channel_SignatureAlgorithm_RSASSA_PSS
#define _extensions_api_cast_channel_SignatureAlgorithm_ARRAYSIZE ((extensions_api_cast_channel_SignatureAlgorithm)(extensions_api_cast_channel_SignatureAlgorithm_RSASSA_PSS+1))

#define _extensions_api_cast_channel_HashAlgorithm_MIN extensions_api_cast_channel_HashAlgorithm_SHA1
#define _extensions_api_cast_channel_HashAlgorithm_MAX extensions_api_cast_channel_HashAlgorithm_SHA256
#define _extensions_api_cast_channel_HashAlgorithm_ARRAYSIZE ((extensions_api_cast_channel_HashAlgorithm)(extensions_api_cast_channel_HashAlgorithm_SHA256+1))

#define _extensions_api_cast_channel_CastMessage_ProtocolVersion_MIN extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0
#define _extensions_api_cast_channel_CastMessage_ProtocolVersion_MAX extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0
#define _extensions_api_cast_channel_CastMessage_ProtocolVersion_ARRAYSIZE ((extensions_api_cast_channel_CastMessage_ProtocolVersion)(extensions_api_cast_channel_CastMessage_ProtocolVersion_CASTV2_1_0+1))

#define _extensions_api_cast_channel_CastMessage_PayloadType_MIN extensions_api_cast_channel_CastMessage_PayloadType_STRING
#define _extensions_api_cast_channel_CastMessage_PayloadType_MAX extensions_api_cast_channel_CastMessage_PayloadType_BINARY
#define _extensions_api_cast_channel_CastMessage_PayloadType_ARRAYSIZE ((extensions_api_cast_channel_CastMessage_PayloadType)(extensions_api_cast_channel_CastMessage_PayloadType_BINARY+1))

#define _extensions_api_cast_channel_AuthError_ErrorType_MIN extensions_api_cast_channel_AuthError_ErrorType_INTERNAL_ERROR
#define _extensions_api_cast_channel_AuthError_ErrorType_MAX extensions_api_cast_channel_AuthError_ErrorType_SIGNATURE_ALGORITHM_UNAVAILABLE
#define _extensions_api_cast_channel_AuthError_ErrorType_ARRAYSIZE ((extensions_api_cast_channel_AuthError_ErrorType)(extensions_api_cast_channel_AuthError_ErrorType_SIGNATURE_ALGORITHM_UNAVAILABLE+1))

#define extensions_api_cast_channel_CastMessage_protocol_version_ENUMTYPE extensions_api_cast_channel_CastMessage_ProtocolVersion
#define extensions_api_cast_channel_CastMessage_payload_type_ENUMTYPE extensions_api_cast_channel_CastMessage_PayloadType

#define extensions_api_cast_channel_AuthChallenge_signature_algorithm_ENUMTYPE extensions_api_cast_channel_SignatureAlgorithm
#define extensions_api_cast_channel_AuthChallenge_hash_algorithm_ENUMTYPE extensions_api_cast_channel_HashAlgorithm

#define extensions_api_cast_channel_AuthResponse_signature_algorithm_ENUMTYPE extensions_api_cast_channel_SignatureAlgorithm
#define extensions_api_cast_channel_AuthResponse_hash_algorithm_ENUMTYPE extensions_api_cast_channel_HashAlgorithm

#define extensions_api_cast_channel_AuthError_error_type_ENUMTYPE extensions_api_cast_channel_AuthError_ErrorType



/* Initializer values for message structs */
#define extensions_api_cast_channel_CastMessage_init_default {_extensions_api_cast_channel_CastMessage_ProtocolVersion_MIN, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, _extensions_api_cast_channel_CastMessage_PayloadType_MIN, {{NULL}, NULL}, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthChallenge_init_default {false, extensions_api_cast_channel_SignatureAlgorithm_RSASSA_PKCS1v15, {{NULL}, NULL}, false, extensions_api_cast_channel_HashAlgorithm_SHA1}
#define extensions_api_cast_channel_AuthResponse_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, extensions_api_cast_channel_SignatureAlgorithm_RSASSA_PKCS1v15, {{NULL}, NULL}, false, extensions_api_cast_channel_HashAlgorithm_SHA1, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthError_init_default {_extensions_api_cast_channel_AuthError_ErrorType_MIN}
#define extensions_api_cast_channel_DeviceAuthMessage_init_default {false, extensions_api_cast_channel_AuthChallenge_init_default, false, extensions_api_cast_channel_AuthResponse_init_default, false, extensions_api_cast_channel_AuthError_init_default}
#define extensions_api_cast_channel_CastMessage_init_zero {_extensions_api_cast_channel_CastMessage_ProtocolVersion_MIN, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, _extensions_api_cast_channel_CastMessage_PayloadType_MIN, {{NULL}, NULL}, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthChallenge_init_zero {false, _extensions_api_cast_channel_SignatureAlgorithm_MIN, {{NULL}, NULL}, false, _extensions_api_cast_channel_HashAlgorithm_MIN}
#define extensions_api_cast_channel_AuthResponse_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _extensions_api_cast_channel_SignatureAlgorithm_MIN, {{NULL}, NULL}, false, _extensions_api_cast_channel_HashAlgorithm_MIN, {{NULL}, NULL}}
#define extensions_api_cast_channel_AuthError_init_zero {_extensions_api_cast_channel_AuthError_ErrorType_MIN}
#define extensions_api_cast_channel_DeviceAuthMessage_init_zero {false, extensions_api_cast_channel_AuthChallenge_init_zero, false, extensions_api_cast_channel_AuthResponse_init_zero, false, extensions_api_cast_channel_AuthError_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define extensions_api_cast_channel_CastMessage_protocol_version_tag 1
#define extensions_api_cast_channel_CastMessage_source_id_tag 2
#define extensions_api_cast_channel_CastMessage_destination_id_tag 3
#define extensions_api_cast_channel_CastMessage_namespace_tag 4
#define extensions_api_cast_channel_CastMessage_payload_type_tag 5
#define extensions_api_cast_channel_CastMessage_payload_utf8_tag 6
#define extensions_api_cast_channel_CastMessage_payload_binary_tag 7
#define extensions_api_cast_channel_AuthChallenge_signature_algorithm_tag 1
#define extensions_api_cast_channel_AuthChallenge_sender_nonce_tag 2
#define extensions_api_cast_channel_AuthChallenge_hash_algorithm_tag 3
#define extensions_api_cast_channel_AuthResponse_signature_tag 1
#define extensions_api_cast_channel_AuthResponse_client_auth_certificate_tag 2
#define extensions_api_cast_channel_AuthResponse_intermediate_certificate_tag 3
#define extensions_api_cast_channel_AuthResponse_signature_algorithm_tag 4
#define extensions_api_cast_channel_AuthResponse_sender_nonce_tag 5
#define extensions_api_cast_channel_AuthResponse_hash_algorithm_tag 6
#define extensions_api_cast_channel_AuthResponse_crl_tag 7
#define extensions_api_cast_channel_AuthError_error_type_tag 1
#define extensions_api_cast_channel_DeviceAuthMessage_challenge_tag 1
#define extensions_api_cast_channel_DeviceAuthMessage_response_tag 2
#define extensions_api_cast_channel_DeviceAuthMessage_error_tag 3

/* Struct field encoding specification for nanopb */
#define extensions_api_cast_channel_CastMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    protocol_version,   1) \
X(a, CALLBACK, REQUIRED, STRING,   source_id,         2) \
X(a, CALLBACK, REQUIRED, STRING,   destination_id,    3) \
X(a, CALLBACK, REQUIRED, STRING,   namespace,         4) \
X(a, STATIC,   REQUIRED, UENUM,    payload_type,      5) \
X(a, CALLBACK, OPTIONAL, STRING,   payload_utf8,      6) \
X(a, CALLBACK, OPTIONAL, BYTES,    payload_binary,    7)
#define extensions_api_cast_channel_CastMessage_CALLBACK pb_default_field_callback
#define extensions_api_cast_channel_CastMessage_DEFAULT NULL

#define extensions_api_cast_channel_AuthChallenge_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UENUM,    signature_algorithm,   1) \
X(a, CALLBACK, OPTIONAL, BYTES,    sender_nonce,      2) \
X(a, STATIC,   OPTIONAL, UENUM,    hash_algorithm,    3)
#define extensions_api_cast_channel_AuthChallenge_CALLBACK pb_default_field_callback
#define extensions_api_cast_channel_AuthChallenge_DEFAULT (const pb_byte_t*)"\x08\x01\x00"

#define extensions_api_cast_channel_AuthResponse_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, BYTES,    signature,         1) \
X(a, CALLBACK, REQUIRED, BYTES,    client_auth_certificate,   2) \
X(a, CALLBACK, REPEATED, BYTES,    intermediate_certificate,   3) \
X(a, STATIC,   OPTIONAL, UENUM,    signature_algorithm,   4) \
X(a, CALLBACK, OPTIONAL, BYTES,    sender_nonce,      5) \
X(a, STATIC,   OPTIONAL, UENUM,    hash_algorithm,    6) \
X(a, CALLBACK, OPTIONAL, BYTES,    crl,               7)
#define extensions_api_cast_channel_AuthResponse_CALLBACK pb_default_field_callback
#define extensions_api_cast_channel_AuthResponse_DEFAULT (const pb_byte_t*)"\x20\x01\x00"

#define extensions_api_cast_channel_AuthError_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    error_type,        1)
#define extensions_api_cast_channel_AuthError_CALLBACK NULL
#define extensions_api_cast_channel_AuthError_DEFAULT NULL

#define extensions_api_cast_channel_DeviceAuthMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  challenge,         1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  response,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  error,             3)
#define extensions_api_cast_channel_DeviceAuthMessage_CALLBACK NULL
#define extensions_api_cast_channel_DeviceAuthMessage_DEFAULT NULL
#define extensions_api_cast_channel_DeviceAuthMessage_challenge_MSGTYPE extensions_api_cast_channel_AuthChallenge
#define extensions_api_cast_channel_DeviceAuthMessage_response_MSGTYPE extensions_api_cast_channel_AuthResponse
#define extensions_api_cast_channel_DeviceAuthMessage_error_MSGTYPE extensions_api_cast_channel_AuthError

extern const pb_msgdesc_t extensions_api_cast_channel_CastMessage_msg;
extern const pb_msgdesc_t extensions_api_cast_channel_AuthChallenge_msg;
extern const pb_msgdesc_t extensions_api_cast_channel_AuthResponse_msg;
extern const pb_msgdesc_t extensions_api_cast_channel_AuthError_msg;
extern const pb_msgdesc_t extensions_api_cast_channel_DeviceAuthMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define extensions_api_cast_channel_CastMessage_fields &extensions_api_cast_channel_CastMessage_msg
#define extensions_api_cast_channel_AuthChallenge_fields &extensions_api_cast_channel_AuthChallenge_msg
#define extensions_api_cast_channel_AuthResponse_fields &extensions_api_cast_channel_AuthResponse_msg
#define extensions_api_cast_channel_AuthError_fields &extensions_api_cast_channel_AuthError_msg
#define extensions_api_cast_channel_DeviceAuthMessage_fields &extensions_api_cast_channel_DeviceAuthMessage_msg

/* Maximum encoded size of messages (where known) */
/* extensions_api_cast_channel_CastMessage_size depends on runtime parameters */
/* extensions_api_cast_channel_AuthChallenge_size depends on runtime parameters */
/* extensions_api_cast_channel_AuthResponse_size depends on runtime parameters */
/* extensions_api_cast_channel_DeviceAuthMessage_size depends on runtime parameters */
#define EXTENSIONS_API_CAST_CHANNEL_PROTO_CAST_CHANNEL_PB_H_MAX_SIZE extensions_api_cast_channel_AuthError_size
#define extensions_api_cast_channel_AuthError_size 2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
